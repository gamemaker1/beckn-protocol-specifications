openapi: 3.0.0
info:
  title: Beckn Core API
  description: Beckn Core API specification
  version: 0.9.3

security:
  - SubscriberAuth: []
  - GatewaySubscriberAuth: []
  - GatewaySubscriberAuthNew: []
paths:
  /search:
    post:
      tags:
        - Beckn Provider Platform (BPP)
        - Beckn Gateway (BG)
      description:
        Enables a user to search for products and services advertised by BPPs
        based on intent.
      requestBody:
        description:
          The user intent, required by BGs and BPPs to search for relevant
          products and services.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    intent:
                      $ref: '#/components/schemas/Intent'
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the received search request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /select:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description:
        Enables users to select items from a BPP's catalog and build their
        order.
      requestBody:
        description: The order to place with the BPP.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
              required:
                - context
                - message

      responses:
        '200':
          description: An acknowledgement of the order received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /init:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description:
        Enable a user to place an order by providing billing and/or shipping
        details.
      requestBody:
        description: The order to place.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledge of the order received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /confirm:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description:
        Enable a user to place an order by providing billing and/or shipping
        details.
      requestBody:
        description: The order to place.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the order received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /status:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description: Enables a user to view the status of an order.
      requestBody:
        description: The ID of the order to view.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order_id:
                      $ref: '#/components/schemas/Order/properties/id'
                  required:
                    - order_id
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /track:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description: Enables a user to track an active order
      requestBody:
        description: The ID of the order to track.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order_id:
                      $ref: '#/components/schemas/Order/properties/id'
                    callback_url:
                      type: string
                      format: uri
                  required:
                    - order_id
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /cancel:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description: Enables a user to cancel an order.
      requestBody:
        description:
          The order to cancel, as well the reason it is being cancelled.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order_id:
                      $ref: '#/components/schemas/Order/properties/id'
                    cancellation_reason_id:
                      $ref: '#/components/schemas/Option/properties/id'
                    descriptor:
                      $ref: '#/components/schemas/Descriptor'
                  required:
                    - order_id
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /update:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description: Enables a user to update an order.
      requestBody:
        description: The updated order.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    update_target:
                      description:
                        A comma separated list of portions of the order being
                        updated.
                      type: string
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - update_target
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /rating:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description: Enables a user to provide feedback on a service.
      requestBody:
        description: The feedback the user provided.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  $ref: '#/components/schemas/Rating'
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the feedback received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /support:
    post:
      tags:
        - Beckn Provider Platform (BPP)
      description: Enables a user to request support from the BPP.
      requestBody:
        description: Information that allows the BPP to better help the user.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    ref_id:
                      type: string
                      description:
                        ID of the element for which support is needed.
              required:
                - context
                - message
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /on_search:
    post:
      tags:
        - Beckn App Platform (BAP)
        - Beckn Gateway (BG)
      description:
        A 'callback' that returns the results of a search request to a BAP.
      requestBody:
        description: The catalog returned by the BPP.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    catalog:
                      $ref: '#/components/schemas/Catalog'
                  required:
                    - catalog
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
  /on_select:
    post:
      tags:
        - Beckn App Platform (BAP)
      description:
        A 'callback' that returns a draft order with the quoted prices for
        items.
      requestBody:
        description: The order details.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        provider:
                          $ref: '#/components/schemas/Provider'
                        provider_location:
                          $ref: '#/components/schemas/Location'
                        items:
                          type: array
                          items:
                            allOf:
                              - $ref: '#/components/schemas/Item'
                              - properties:
                                  quantity:
                                    $ref: '#/components/schemas/ItemQuantity'
                        add_ons:
                          type: array
                          items:
                            $ref: '#/components/schemas/AddOn'
                        offers:
                          type: array
                          items:
                            $ref: '#/components/schemas/Offer'
                        quote:
                          $ref: '#/components/schemas/Quotation'
                  required:
                    - order
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_init:
    post:
      tags:
        - Beckn App Platform (BAP)
      description:
        A 'callback' that returns the draft order with billing and/or shipping
        details.
      requestBody:
        description: TODO
        content:
          application/json:
            schema:
              type: The order details.
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        provider:
                          type: object
                          properties:
                            id:
                              $ref: '#/components/schemas/Provider/properties/id'
                        provider_location:
                          type: object
                          properties:
                            id:
                              $ref: '#/components/schemas/Location/properties/id'
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/components/schemas/Item/properties/id'
                              quantity:
                                $ref: '#/components/schemas/ItemQuantity/properties/selected'
                        add_ons:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/components/schemas/AddOn/properties/id'
                        offers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/components/schemas/Offer/properties/id'
                        billing:
                          $ref: '#/components/schemas/Billing'
                        fulfillment:
                          $ref: '#/components/schemas/Fulfillment'
                        quote:
                          $ref: '#/components/schemas/Quotation'
                        payment:
                          $ref: '#/components/schemas/Payment'
                  required:
                    - order
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_confirm:
    post:
      tags:
        - Beckn App Platform (BAP)
      description:
        A 'callback' that returns the draft order with billing and/or shipping
        details.
      requestBody:
        description: The order details.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_track:
    post:
      tags:
        - Beckn App Platform (BAP)
      description:
        A 'callback' that returns the tracking details for a specific order.
      requestBody:
        description: The tracking details.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    tracking:
                      $ref: '#/components/schemas/Tracking'
                  required:
                    - tracking
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_cancel:
    post:
      tags:
        - Beckn App Platform (BAP)
      description: A 'callback' that returns the cancelled order's details.
      requestBody:
        description: TODO
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_update:
    post:
      tags:
        - Beckn App Platform (BAP)
      description: A 'callback' that returns the updated order.
      requestBody:
        description: The updated order details.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_status:
    post:
      tags:
        - Beckn App Platform (BAP)
      description: A 'callback' that returns the status of a specific order.
      requestBody:
        description: The status of the order.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/Order'
                  required:
                    - order
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_rating:
    post:
      tags:
        - Beckn App Platform (BAP)
      description:
        A 'callback' that returns acknowledgement for the rating received.
      requestBody:
        description: The acknowledgement of the received rating.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  $ref: '#/components/schemas/RatingAck'
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message
  /on_support:
    post:
      tags:
        - Beckn App Platform (BAP)
      description:
        A 'callback' that returns details regarding contacting support.
      requestBody:
        description: The contact details of the BPP's support service.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    phone:
                      type: string
                      format: phone
                    email:
                      type: string
                      format: email
                    uri:
                      type: string
                      format: uri
                error:
                  $ref: '#/components/schemas/Error'
              required:
                - context
      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /get_cancellation_reasons:
    post:
      tags:
        - BPP Meta APIs
      description:
        Enables a BAP to retrieve a list of possible cancellation reasons from a
        BPP.
      requestBody:
        description: The context in which the request is being made.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /cancellation_reasons:
    post:
      tags:
        - BAP Meta APIs
      description:
        A 'callback' that returns a list of possible cancellation reasons from a
        BPP.
      requestBody:
        description: The list of cancellation reasons
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    cancellation_reasons:
                      type: array
                      items:
                        $ref: '#/components/schemas/Option'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /get_return_reasons:
    post:
      tags:
        - BPP Meta APIs
      description:
        Enables a BAP to retrieve a list of possible return reasons from a BPP.
      requestBody:
        description: The context in which the request is being made.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /return_reasons:
    post:
      tags:
        - BAP Meta APIs
      description:
        A 'callback' that returns a list of possible cancellation reasons from a
        BPP.
      requestBody:
        description: The list of return reasons.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                return_reasons:
                  type: array
                  items:
                    $ref: '#/components/schemas/Option'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /get_rating_categories:
    post:
      tags:
        - BPP Meta APIs
      description:
        Enables a BAP to retrieve a list of rrateable categories from a BPP.
      requestBody:
        description: The context in which the request is being made.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /rating_categories:
    post:
      tags:
        - BAP Meta APIs
      description:
        A 'callback' that returns a list of rateable categories from a BPP.
      requestBody:
        description: The list of rateable categories.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                rating_categories:
                  type: array
                  items:
                    $ref: '#/components/schemas/Rating/properties/rating_category'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /get_feedback_categories:
    post:
      tags:
        - BPP Meta APIs
      description:
        Enables a BAP to retrieve a list of categories for which feedback can be
        given from a BPP.
      requestBody:
        description: The context in which the request is being made.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /feedback_categories:
    post:
      tags:
        - BAP Meta APIs
      description:
        A 'callback' that returns a list of categories for which feedback can be
        given.
      requestBody:
        description: The list of categories for which feedback can be given.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                feedback_categories:
                  type: array
                  items:
                    $ref: '#/components/schemas/Rating/properties/rating_category'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /get_feedback_form:
    post:
      tags:
        - BPP Meta APIs
      description: Enables a BAP to retrieve a feedback form from a BPP.
      requestBody:
        description:
          The rating value and category for which a feedback form is required.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    rating_value:
                      $ref: '#/components/schemas/Rating/properties/value'
                    rating_category:
                      $ref: '#/components/schemas/Rating/properties/rating_category'
      responses:
        '200':
          description: An acknowledgement of the request received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

  /feedback_form:
    post:
      tags:
        - BAP Meta APIs
      description: A 'callback' that returns the requested feedback form.
      requestBody:
        description: The feedback form sent by the BPP.
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: '#/components/schemas/Context'
                message:
                  $ref: '#/components/schemas/Feedback'

      responses:
        '200':
          description: An acknowledgement of the response received.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: '#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - message

components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description:
        'Signature of message body using BAP or BPP subscriber''s signing public
        key. <br/><br/>Format:<br/><br/><code>Authorization : Signature
        keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created)
        (expires) digest",signature="Base64(signing string)"</code>'
    GatewaySubscriberAuth:
      type: apiKey
      in: header
      name: Proxy-Authorization
      description:
        'Signature of message body + BAP/BPP''s Authorization header using BG''s
        signing public key. Format:<br/><br/><code>Proxy-Authorization :
        Signature
        keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created)
        (expires) digest",signature="Base64(signing
        string)"</code><p><b>Note:</b>This header will be deprecated soon and
        will no longer be supported in future releases. New implementors are
        requested to use the X-Gateway-Authorization header. Existing
        implementations are requested to migrate their header to the new header.
        The deprecation date will be set after discussion as per the standard
        specification governance process.</p>'
    GatewaySubscriberAuthNew:
      type: apiKey
      in: header
      name: X-Gateway-Authorization
      description:
        'Signature of message body + BAP/BPP''s Authorization header using BG''s
        signing public key. Format:<br/><br/><code>X-Gateway-Authorization :
        Signature
        keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created)
        (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    Ack:
      description:
        Describes the acknowledgement message a BPP, BAP or BG sends as response
        to any beckn API calls. This can represent the acknowledged or not
        acknowledged status response.<br>This has one property status<br>This
        schema is used in the response of all the beckn API calls<br>This is
        used to convey the acknowledgement status of a beckn API call received
        by a network participant. If the network participant received the API
        call successfully and has validated the request is as per protocol
        specifications and signature verified it can send back an ACK as status.
        Or else it will send NACK as status
      type: object
      properties:
        status:
          type: string
          description:
            'Describe the status of the ACK response. If schema validation
            passes, status is ACK else it is NACK'
          enum:
            - ACK
            - NACK
      required:
        - status
    AddOn:
      description:
        Describes an ancillary item sold to the buyer of a main product or
        service<br>This has properties like id,descriptor,price<br>This schema
        is used in the addons array in the Order schema object
      type: object
      properties:
        id:
          type: string
          description:
            'ID of the add-on. This follows the syntax {item.id}/add-on/{add-on
            unique id} for item specific add-on OR '
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
    Address:
      description:
        Describes the postal address of a location. This is the address that can
        be accessed by mail.<br>This has properties like door number, name of
        the address, building number, street, locality, ward, state and country,
        and area code<br>This schema is used in the following locations
        <br><ul><li>location.address</li><li>billing.address</li></ul><br>This
        is used in the following situations.<br><ul><li>This is typically used
        during the discovery stage when specifying the address of a provider.
        For example- When specifying the address of a store</li><li>This is
        typically used during the order stage when specifying the billing
        address of a consumer</li><li>This is typically used during the order
        stage when specifying the address where fulfillment starts. For example-
        When specifying pickup location</li><li>This is typically used during
        the order stage when specifying the address where fulfillment ends. For
        example- When specifying drop location</li></ul><br>This is used to
        allow the fulfillment agent to reach the exact location of fulfillment
        start or end. This is done because, just GPS coordinates may not be
        enough to reach the exact points of fulfillment. The postal address
        provides granularity till the door number of a physical location.
        <br>This is used by the BAP to send the billing address of the user to
        the BPP for creating an order.<br>This is used by the user to physically
        go to the store location during store-pickup.<br>This is used by the
        fulfillment agent to physically go to the provider's location to pickup
        an order<br>This is used by the fulfillment agent to physically go to
        the consumer's location to deliver an order<br>This is used by a BPP for
        saving the billing address for confirming an order<br>The address can be
        used by the consumer app to geolocate the position of a provider's store
        on a map. <br>The address can be used by the agent's app to geolocate
        the position of the start of fulfillment on a map<br>The address can be
        used by the agent to physically go to the exact location where a
        fulfillment starts of ends.<br>The address will be saved as the billing
        address for the order created by the BPP
      type: object
      properties:
        door:
          type: string
          description: Door / Shop number of the address
        name:
          type: string
          description: 'Name of address if applicable. Example, shop name'
        building:
          type: string
          description: Name of the building or block
        street:
          type: string
          description: Street name or number
        locality:
          type: string
          description: 'Name of the locality, apartments'
        ward:
          type: string
          description: Name or number of the ward if applicable
        city:
          type: string
          description: City name
        state:
          type: string
          description: State name
        country:
          type: string
          description: Country name
        area_code:
          type: string
          description:
            'Area code. This can be Pincode, ZIP code or any equivalent'
    Agent:
      description:
        Describes the direct performer or driver or executor of the fulfillment
        of an order. In the healthcare domain it can be a doctor while in the
        mobility domain it can be a taxi driver.<br>This has properties such as
        name, image, dob, gender, cred, tags, phone, email and rateable<br>This
        schema is used in the agent property of the Fulfillment schema
        object<br>This is used in the following situations.<br><ul><li>This is
        typically used in the discovery stage when the BPP wants to convey
        details of the person who will be fulfilling the order so that the
        customer can make an informed decision about the product or service they
        need to purchase</li><li>This is typically used in the fulfillment stage
        when the BPP assigns an agent to fulfill the order post confirmation of
        the same</li></ul><br>This is used to allow the BPP to send the details
        of the person fulfilling the order to the end user.
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/Contact'
        - type: object
          properties:
            rateable:
              $ref: '#/components/schemas/Rateable'
    Authorization:
      description:
        Describes an authorization mechanism used in the order
        lifecycle.<br>This has properties like type, token, valid_from, valid_to
        and status<br>This is used in the following
        situations.<br><ul><li>Typically in the fulfillment stage when BPP sends
        wants an authorization mechanism that the customer needs to use for
        starting/ending the fulfillment process</li></ul><br>This is used to
        allow a user to authorize the validity of their order with an agent so
        that fulfillment of the order can start/end. This is also used as proof
        of presence of the customer so that an agent can start/end the
        fulfillment.<br>This can be used by the user to start fulfillment by
        providing the token as proof of presence.<br>This can be used by the
        user as a proof of purchase of service to an agent at start/end of
        fulfillment<br>This can be used by the user to end fulfillment by
        providing the token as proof of completion of service.<br><br>The
        authorization mechanism can be used in several ways to authorize the
        start or end of a fulfillment.<br>In the mobility domain a BPP which
        renders taxi services may give an OTP to the BAP after confirming the
        order. The end user will give the OTP to the agent(taxi driver) as proof
        of presence to start the taxi service<br>In the logistics domain a BPP
        that renders courier services can give an OTP to the BAP while the
        delivery service is being performed the agent. The end user will give
        the OTP to the agent so that they can mark the package as successfully
        delivered.<br>In the mobility domain a public transit BPP can send a
        signed QR code string to the BAP. The BAP will render it as a QR code
        which the end user will present to a ticketing agent who can read the QR
        code using their device and authenticate the validity of the ticket
      type: object
      properties:
        type:
          type: string
          description: Type of authorization mechanism used
        token:
          type: string
          description: Token used for authorization
        valid_from:
          type: string
          format: date-time
          description: Timestamp in RFC3339 format from which token is valid
        valid_to:
          type: string
          format: date-time
          description: Timestamp in RFC3339 format until which token is valid
        status:
          type: string
          description: Status of the token
    Billing:
      description:
        Describes the billing details of an entity.<br>This has properties like
        name,organization,address,email,phone,time,tax_number,
        created_at,updated_at
      type: object
      properties:
        name:
          description: Personal details of the customer needed for billing.
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          format: email
        phone:
          type: string
        time:
          $ref: '#/components/schemas/Time'
        tax_number:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - phone
    Cancellation:
      description: Describes the ACK response
      type: object
      properties:
        type:
          type: string
          enum:
            - full
            - partial
        ref_id:
          type: string
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        time:
          type: string
          format: date-time
        cancelled_by:
          type: string
        reasons:
          $ref: '#/components/schemas/Option'
        selected_reason:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/Option/properties/id'
        additional_description:
          $ref: '#/components/schemas/Descriptor'
    Catalog:
      description:
        Describes the products or services offered by a BPP. This is typically
        sent as the response to a search intent from a BAP. The payment terms,
        offers and terms of fulfillment supported by the BPP can also be
        included here.<br>This has properties like
        bbp/descriptor,bbp/categories,bbp/fulfillments,bbp/payments,bbp/offers,bbp/providers
        and exp<br>This is used in the following situations.<br><ul><li>This is
        typically used in the discovery stage when the BPP sends the details of
        the products and services it offers as response to a search intent from
        the BAP. </li></ul>
      type: object
      properties:
        bpp/descriptor:
          $ref: '#/components/schemas/Descriptor'
        bpp/categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        bpp/fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        bpp/payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        bpp/offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        bpp/providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        exp:
          type: string
          description: Time after which catalog has to be refreshed
          format: date-time
    Category:
      description:
        Describes a type or division of providers or items regarded as having
        one or more shared characteristics<br>This has properties like
        id,parent_category_id,descriptor,time,tags<br>This is used in the
        following situations.<br><ul><li>This is typically used in the discovery
        stage when the BPP wants to categorize the products or services in its
        catalog as additional information about the product or service
        </li><li>This is typically used in the discovery stage when the BPP
        wants to categorize the products or services in its catalog because the
        price of the same product or service can change based on the category
        </li><li>This is typically used in the discovery stage when the BPP
        wants to categorize the products or services in its catalog as
        additional information about the product or service </li></ul>
      type: object
      properties:
        id:
          type: string
          description: Unique id of the category
        parent_category_id:
          $ref: '#/components/schemas/Category/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        time:
          $ref: '#/components/schemas/Time'
        tags:
          $ref: '#/components/schemas/Tags'
    Circle:
      description:
        Describes a circular region of a specified radius centered at a
        specified GPS coordinate.<br>This has properties like gps,radius<br>This
        is used when a circular area needs to be represented as a location.
      type: object
      properties:
        gps:
          $ref: '#/components/schemas/Gps'
        radius:
          $ref: '#/components/schemas/Scalar'
      required:
        - gps
        - radius
    City:
      description:
        Describes a city or a town<br>This has properties like name,code
      type: object
      properties:
        name:
          type: string
          description: Name of the city
        code:
          type: string
          description: City code
    Contact:
      description:
        Describes the contact information of an entity including phone number or
        an email ID<br>This has properties like phone,email,tags<br>This is used
        to allow the BPP or BAP to send contact details of a person.
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
    Context:
      description:
        Describes the context of the message being sent.<br>This has properties
        like
        domain,country,city,action,code_version,bap_id,bap_uri,bpp_id,bpp_uri,transaction_id,message-id,timestamp,key,ttl
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
        country:
          $ref: '#/components/schemas/Country/properties/code'
        city:
          $ref: '#/components/schemas/City/properties/code'
        action:
          type: string
          description:
            Defines the Beckn API call. Any actions other than the enumerated
            actions are not supported by Beckn Protocol
          enum:
            - search
            - select
            - init
            - confirm
            - update
            - status
            - track
            - cancel
            - rating
            - support
            - on_search
            - on_select
            - on_init
            - on_confirm
            - on_update
            - on_status
            - on_track
            - on_cancel
            - on_rating
            - on_support
        core_version:
          type: string
          description: Version of Beckn core API specification being used
        bap_id:
          type: string
          format: uri
          description:
            Unique id of the BAP. By default it is the fully qualified domain
            name of the BAP
        bap_uri:
          type: string
          format: uri
          description:
            URI of the BAP for accepting callbacks. Must have the same domain
            name as the bap_id
        bpp_id:
          type: string
          format: uri
          description:
            Unique id of the BPP. By default it is the fully qualified domain
            name of the BPP
        bpp_uri:
          type: string
          format: uri
          description:
            URI of the BPP. Must have the same domain name as the bap_id
        transaction_id:
          type: string
          description:
            This is a unique value which persists across all API calls from
            search through confirm
        message_id:
          type: string
          description:
            This is a unique value which persists during a request / callback
            cycle
        timestamp:
          type: string
          format: date-time
          description: Time of request generation in RFC3339 format
        key:
          type: string
          description: The encryption public key of the sender
        ttl:
          type: string
          description:
            The duration in ISO8601 format after timestamp for which this
            message holds valid
      required:
        - domain
        - action
        - country
        - city
        - core_version
        - transaction_id
        - message_id
        - bap_id
        - bap_uri
        - timestamp
    Country:
      description: Describes a country.<br>This has properties like name,code
      type: object
      properties:
        name:
          type: string
          description: Name of the country
        code:
          type: string
          description: Country code as per ISO 3166-1 and ISO 3166-2 format
    DecimalValue:
      description: Describes a numerical value in decimal form
      type: string
      pattern: '[+-]?([0-9]*[.])?[0-9]+'

    Descriptor:
      description:
        Describes the description used to describe or identify a real world
        object<br>This has properties like
        name,code,symbol,short_desc,long_desc,images,audio,3d_render
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        symbol:
          type: string
        short_desc:
          type: string
        long_desc:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        audio:
          type: string
          format: uri
        3d_render:
          type: string
          format: uri

    Dimensions:
      description:
        Describes the length, width and height of a real-world object.<br>This
        has properties like length,breadth,height
      type: object
      properties:
        length:
          $ref: '#/components/schemas/Scalar'
        breadth:
          $ref: '#/components/schemas/Scalar'
        height:
          $ref: '#/components/schemas/Scalar'

    Document:
      description:
        Describes a piece of written or printed matter in electronic form that
        provides information or evidence or that serves as an official record.
        This will be given a URL.<br>This has properties like url,label<br>This
        is used in the following situations.<br><ul><li>This is typically used
        in the order stage if any documents from the user are needed by the BPP
        to confirm the order</li><li>This is typically used in the fulfilment
        and post fulfillment stage if the BPP needs to send any documents
        related to the order to the user</li></ul><br>This is used to allow
        documents to be exchanged between the BAP and the BPP
      type: object
      properties:
        url:
          type: string
          format: uri
        label:
          type: string

    Domain:
      description:
        Described the sector, industry or field for which the current beckn
        transaction is for. Examples of domains are mobility, local retail,
        logistics etc. Each network can choose its own codes for specifying a
        domain within the network.
      type: string

    Duration:
      description: Describes duration as per ISO8601 format
      type: string

    Error:
      description:
        Describes an error object that is returned by a BAP, BPP or BG as a
        response or callback to an action by another network participant<br>This
        has properties like type,code,path,message<br>This schema is used in the
        response of all the beckn API calls as well as the callback beckn
        APIs<br>This is used to return the details of an error that happened
        while processing a beckn API call received by a network participant.
      type: object
      properties:
        type:
          type: string
          enum:
            - CONTEXT-ERROR
            - CORE-ERROR
            - DOMAIN-ERROR
            - POLICY-ERROR
            - JSON-SCHEMA-ERROR
        code:
          type: string
          description:
            'Beckn specific error code. For full list of error codes, refer to
            docs/protocol-drafts/BECKN-RFC-005-ERROR-CODES-DRAFT-01.md of this
            repo'
        path:
          type: string
          description:
            Path to json schema generating the error. Used only during json
            schema validation errors
        message:
          type: string
          description: Human readable message describing the error
      required:
        - type
        - code

    Feedback:
      description:
        Describes the mechanism by which a BPP can receive feedback for a
        service or a product. This can be in the form of a feedback form which
        can be rendered by the BAP or a URL which the BAP can present to the end
        customer.<br>This has properties like
        feedback_forum,feedback_url<br>This is used in the following
        situations.<br><ul><li>This is typically used in the post fulfillment
        stage when a BAP sends feedback for a service or product or a
        fulfillment agent provided by the BPP</li><li>This is typically used in
        the post fulfillment stage when the BPP sends the feedback form or URL
        that needs to be used by the BAP</li></ul>
      type: object
      properties:
        feedback_form:
          $ref: '#/components/schemas/FeedbackForm'
        feedback_url:
          $ref: '#/components/schemas/FeedbackUrl'

    FeedbackForm:
      description:
        Describes a feedback form that a BPP can send to get feedback from the
        BAP. The BAP render this and will send the response of the form in this
        same structure.<br>This has properties like
        description,id,parent_id,question,answer,answer_type<br>This is used in
        the following situations.<br><ul><li>This is typically used in the post
        fulfillment stage when a BAP sends feedback for a service or product or
        a fulfillment agent provided by the BPP in a feedback form</li><li>This
        is typically used in the post fulfillment stage when the BPP sends the
        feedback form that needs to be used by the BAP</li></ul>
      type: array
      items:
        $ref: '#/components/schemas/FeedbackFormElement'

    FeedbackFormElement:
      description:
        Describes a single element in the feedback form. It can be question or
        an answer to the question.<br>This has properties like
        id,parent_id,question,answer,answer_type
      type: object
      properties:
        id:
          type: string
        parent_id:
          $ref: '#/components/schemas/FeedbackFormElement/properties/id'
        question:
          description:
            Specifies the question to which the answer options will be contained
            in the child FeedbackFormElements
          type: string
        answer:
          description:
            Specifies an answer option to which the question will be in the
            FeedbackFormElement specified in parent_id
          type: string
        answer_type:
          description: Specifies how the answer option should be rendered.
          type: string
          enum:
            - radio
            - checkbox
            - text

    FeedbackUrl:
      description:
        Describes the feedback URL that an end customer can use to provide
        feedback to the BPP for products or services.<br>This has properties
        like url,tl_method,params<br>This is used in the following
        situations.<br><ul><li>This is typically used in the post fulfillment
        stage when the BPP sends the feedback URL that needs to be used by the
        BAP for providing feedback for a service or product or fulfillment
        agent</li></ul>
      type: object
      properties:
        url:
          description: feedback URL sent by the BPP
          type: string
          format: uri
        tl_method:
          type: string
          enum:
            - http/get
            - http/post
        params:
          type: object
          properties:
            feedback_id:
              type: string
              description:
                This value will be placed in the the $feedback_id url param in
                case of http/get and in the requestBody http/post requests
          additionalProperties:
            type: string
          required:
            - feedback_id

    Fulfillment:
      description:
        Describes how a single product/service will be rendered/fulfilled to the
        end customer<br>This has properties like
        id,type,provider_id,rating,state,tracking,
        customer,agent,person,contact,vehicle,start,end,rateable,tags<br>This is
        used in the following situations.<br><ul><li>This is typically used in
        the discovery stage when the BPP sends the fulfillment terms to the
        BAP</li><li>This is typically used in the order stage when the BPP sends
        the fulfillment terms to the BAP</li><li>This is typically used in the
        fulfillment stage when the BPP sends the status and current details of
        fulfillment to the BAP</li></ul>
      type: object
      properties:
        id:
          type: string
          description: Unique reference ID to the fulfillment of an order
        type:
          type: string
          description: This describes the type of fulfillment
        provider_id:
          $ref: '#/components/schemas/Provider/properties/id'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        state:
          $ref: '#/components/schemas/State'
        tracking:
          type: boolean
          description: Indicates whether the fulfillment allows tracking
          default: false
        customer:
          type: object
          properties:
            person:
              $ref: '#/components/schemas/Person'
            contact:
              $ref: '#/components/schemas/Contact'
        agent:
          $ref: '#/components/schemas/Agent'
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        start:
          description: Details on the start of fulfillment
          type: object
          properties:
            location:
              $ref: '#/components/schemas/Location'
            time:
              $ref: '#/components/schemas/Time'
            instructions:
              $ref: '#/components/schemas/Descriptor'
            contact:
              $ref: '#/components/schemas/Contact'
            person:
              $ref: '#/components/schemas/Person'
            authorization:
              $ref: '#/components/schemas/Authorization'
        end:
          description: Details on the end of fulfillment
          type: object
          properties:
            location:
              $ref: '#/components/schemas/Location'
            time:
              $ref: '#/components/schemas/Time'
            instructions:
              $ref: '#/components/schemas/Descriptor'
            contact:
              $ref: '#/components/schemas/Contact'
            person:
              $ref: '#/components/schemas/Person'
            authorization:
              $ref: '#/components/schemas/Authorization'
        rateable:
          $ref: '#/components/schemas/Rateable'
        tags:
          $ref: '#/components/schemas/Tags'
    Gps:
      description:
        Describes a GPS coordinates which is a unique identifier of a precise
        geographic location on the earth.<br>
      type: string
      pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
    Image:
      description:
        'Image of an object. <br/><br/> A url based image will look like
        <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be
        sent as a data string. For example : <br/><br/>
        ```data:js87y34ilhriuho84r3i4```'
      type: string
    Intent:
      description:
        Intent of a user. Used for searching for products or services.<br>This
        has properties like
        descriptor,provider,fulfillment,payment,category,offer,item,tags<br>This
        is typically used by the BAP to send the purpose of the user's search to
        the BPP. This will be used by the BPP to find products or services it
        offers that may match the user's intent.
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        provider:
          $ref: '#/components/schemas/Provider'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        payment:
          $ref: '#/components/schemas/Payment'
        category:
          $ref: '#/components/schemas/Category'
        offer:
          $ref: '#/components/schemas/Offer'
        item:
          $ref: '#/components/schemas/Item'
        tags:
          $ref: '#/components/schemas/Tags'

    ItemQuantity:
      description:
        Describes the count or amount of an item<br>This has properties like
        allocated,available,maximum,minimum,selected
      type: object
      properties:
        allocated:
          type: object
          properties:
            count:
              type: integer
              minimum: 0
            measure:
              $ref: '#/components/schemas/Scalar'
        available:
          type: object
          properties:
            count:
              type: integer
              minimum: 0
            measure:
              $ref: '#/components/schemas/Scalar'
        maximum:
          type: object
          properties:
            count:
              type: integer
              minimum: 1
            measure:
              $ref: '#/components/schemas/Scalar'
        minimum:
          type: object
          properties:
            count:
              type: integer
              minimum: 0
            measure:
              $ref: '#/components/schemas/Scalar'
        selected:
          type: object
          properties:
            count:
              type: integer
              minimum: 0
            measure:
              $ref: '#/components/schemas/Scalar'
    Item:
      description:
        Describes a product or a service offered to the end consumer by the
        provider. In the mobility domain item can represent a fare product like
        one way journey while in the logistics domain it can represent the
        delivery service offering while in the local retail domain it can
        represent a product like a grocery item.<br>This has properties like
        id,parent_item_id,descriptor,price,category_id,fulfillment_id,rating,time,location_id,time,rateable,matched,related,recommended,
        tags<br>This is used in the following situations.<br><ul><li>This is
        typically used in the discovery stage when the BPP sends the catalog of
        products or services it offers to the BAP in the items
        array</li><li>This is typically used in the order stage when the BAP
        sends the details of the item the user wants to purchase</li><li>This is
        typically used in the fulfillment stage when the BPP/BAP sends the order
        object containing the details of the products or services purchased in
        the order</li></ul>
      type: object
      properties:
        id:
          description:
            This is the most unique identifier of a service item. An example of
            an Item ID could be the SKU of a product.
          type: string
          format: '#/components/schemas/Item/properties/id'
        parent_item_id:
          $ref: '#/components/schemas/Item/properties/id'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Price'
        category_id:
          $ref: '#/components/schemas/Category/properties/id'
        fulfillment_id:
          $ref: '#/components/schemas/Fulfillment/properties/id'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        location_id:
          $ref: '#/components/schemas/Location/properties/id'
        time:
          $ref: '#/components/schemas/Time'
        rateable:
          $ref: '#/components/schemas/Rateable'
        matched:
          type: boolean
        related:
          type: boolean
        recommended:
          type: boolean
        tags:
          $ref: '#/components/schemas/Tags'
    Language:
      description:
        Describes a specific language using a language code.<br>This has
        properties like code
      type: object
      properties:
        code:
          type: string
    Location:
      description:
        Describes the location of something, for example, where an event is
        happening, where a store is located, or where an action takes
        place<br>This has properties like id,descriptor,gps,address,station
        code,city,country,circle,polygon,3d space,time
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        gps:
          $ref: '#/components/schemas/Gps'
        address:
          $ref: '#/components/schemas/Address'
        station_code:
          type: string
        city:
          $ref: '#/components/schemas/City'
        country:
          $ref: '#/components/schemas/Country'
        circle:
          $ref: '#/components/schemas/Circle'
        polygon:
          type: string
        3dspace:
          type: string
        time:
          $ref: '#/components/schemas/Time'
    Name:
      type: string
      description:
        'Describes the name of a person in format:
        ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}'
      pattern: '^\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$'

    Offer:
      description:
        Describes how a product or a service will be rendered at a reduced price
        to the user<br>This has properties like
        id,descriptor,location_ids,category_ids,item_ids,time
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        location_ids:
          type: array
          items:
            $ref: '#/components/schemas/Location/properties/id'
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/Category/properties/id'
        item_ids:
          type: array
          items:
            $ref: '#/components/schemas/Item/properties/id'
        time:
          $ref: '#/components/schemas/Time'

    Operator:
      description: Describes the agent of a service
      allOf:
        - $ref: '#/components/schemas/Person'
        - properties:
            experience:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
                unit:
                  type: string

    Option:
      description:
        Describes a selectable option<br>This has properties like id,description
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
    Order:
      description:
        Describes an order which contains the terms, details, status and
        identifier of a transaction between a BAP and a BPP. This is usually an
        exchange of goods or services for money.<br>This has properties like
        id,state,provider,items,add_ons,offers,documents,billings,fulfillment,quote,payment,created_at,updated_at<br>This
        is used in the following situations.<br><ul><li>This is typically used
        in the order stage when the BAP sends the details of the order it wishes
        to create</li><li>This is typically used in the fulfillment stage when
        the BPP/BAP sends the order details</li></ul>
      type: object
      properties:
        id:
          type: string
          description: Hash of order object without id
        state:
          type: string
        provider:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/Provider/properties/id'
            locations:
              type: array
              maxItems: 1
              items:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Location/properties/id'
                required:
                  - id
        items:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Item/properties/id'
              quantity:
                $ref: '#/components/schemas/ItemQuantity/properties/selected'
            required:
              - id
        add_ons:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/AddOn/properties/id'
            required:
              - id
        offers:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Offer/properties/id'
            required:
              - id
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        billing:
          $ref: '#/components/schemas/Billing'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
        quote:
          $ref: '#/components/schemas/Quotation'
        payment:
          $ref: '#/components/schemas/Payment'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Organization:
      description:
        Describes an organization such as a school, NGO, corporation, club,
        company etc.<br>This has properties like name,cred
      type: object
      properties:
        name:
          type: string
        cred:
          type: string

    Page:
      description: Describes a page in a search result
      type: object
      properties:
        id:
          type: string
        next_id:
          type: string

    Payment:
      description:
        Describes the payment mechanism to be used for the order.<br>This has
        properties like uri,tl_method,params,type,status,time. For more info
        please check BECKN-RFC-002 <a
        href="https://github.com/beckn/protocol-specifications/blob/core-0.9.4-draft/docs/protocol-drafts/BECKN-002-Payments-On-Beckn-Enabled-Networks.md">Payments
        on Beckn-Enabled Networks</a>
      type: object
      properties:
        uri:
          type: string
          description:
            'A payment uri to be called by the BAP. If empty, then the payment
            is to be done offline. The details of payment should be present in
            the params object. If ```tl_method``` = http/get, then the payment
            details will be sent as url params. Two url param values,
            ```$transaction_id``` and ```$amount``` are mandatory. And example
            url would be :
            https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234'
          format: uri
        tl_method:
          type: string
          enum:
            - http/get
            - http/post
            - payto
            - upi
        params:
          type: object
          properties:
            transaction_id:
              type: string
              description:
                This value will be placed in the the $transaction_id url param
                in case of http/get and in the requestBody http/post requests
            transaction_status:
              type: string
            amount:
              $ref: '#/components/schemas/Price/properties/value'
            currency:
              $ref: '#/components/schemas/Price/properties/currency'
          additionalProperties:
            type: string
          required:
            - currency
        type:
          type: string
          enum:
            - ON-ORDER
            - PRE-FULFILLMENT
            - ON-FULFILLMENT
            - POST-FULFILLMENT
        status:
          type: string
          enum:
            - PAID
            - NOT-PAID
        time:
          $ref: '#/components/schemas/Time'

    Person:
      description:
        Describes a person as any individual<br>This has the properties like
        name,image,dob,gender,cred,tags
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        image:
          $ref: '#/components/schemas/Image'
        dob:
          type: string
          format: date
        gender:
          type: string
          description:
            'Gender of something, typically a Person, but possibly also
            fictional characters, animals, etc. While Male and Female may be
            used, text strings are also acceptable for people who do not
            identify as a binary gender'
        cred:
          type: string
        tags:
          $ref: '#/components/schemas/Tags'
    Policy:
      description:
        Describes a policy.<br>This has properties like
        id_description,parent_policy_id,time
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        parent_policy_id:
          $ref: '#/components/schemas/Policy/properties/id'
        time:
          $ref: '#/components/schemas/Time'

    Price:
      description:
        Describes the price of a product or service<br>This has properties like
        currency_value,estimated_value,computed_value,listed_value,offered_value,Minimum_value,maximum_value
      type: object
      properties:
        currency:
          type: string
        value:
          $ref: '#/components/schemas/DecimalValue'
        estimated_value:
          $ref: '#/components/schemas/DecimalValue'
        computed_value:
          $ref: '#/components/schemas/DecimalValue'
        listed_value:
          $ref: '#/components/schemas/DecimalValue'
        offered_value:
          $ref: '#/components/schemas/DecimalValue'
        minimum_value:
          $ref: '#/components/schemas/DecimalValue'
        maximum_value:
          $ref: '#/components/schemas/DecimalValue'

    Provider:
      description:
        Describes a service provider. This can be a restaurant, a hospital, a
        Store etc<br>This has properties like
        id,descriptor,category_id,rating,time,categories,fulfillment,payments,locations,offers,items,exp,rateables,tags
      type: object
      properties:
        id:
          type: string
          description: 'Id of the provider'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        category_id:
          type: string
          description: 'Category Id of the provider'
        rating:
          $ref: '#/components/schemas/Rating/properties/value'
        time:
          $ref: '#/components/schemas/Time'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        locations:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Location'
              - type: object
                properties:
                  rateable:
                    $ref: '#/components/schemas/Rateable'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        exp:
          type: string
          description: Time after which catalog has to be refreshed
          format: date-time
        rateable:
          $ref: '#/components/schemas/Rateable'
        tags:
          $ref: '#/components/schemas/Tags'

    Quotation:
      description:
        Describes a quote. It is the estimated price of products or services
        from the BPP.<br>This has properties like price, breakup, ttl
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        breakup:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              price:
                $ref: '#/components/schemas/Price'
        ttl:
          $ref: '#/components/schemas/Duration'

    Rateable:
      description: Describes if the entity can be rated or not
      type: boolean

    Rating:
      description:
        Describes the rating of a person or an object<br>This has properties
        like rating category,id,value, feedback_id,feedback_form
      type: object
      properties:
        rating_category:
          description: Category of the object being rated
          type: string
        id:
          description: Id of the object being rated
          type: string
        value:
          description: Rating value given to the object
          type: number
          minimum: 0
        feedback_form:
          $ref: '#/components/schemas/FeedbackForm'
        feedback_id:
          $ref: '#/components/schemas/FeedbackUrl/properties/params/properties/feedback_id'

    RatingAck:
      description:
        Describes the acknowledgement that feedback or rating has been recorded
        by the BPP.<br>
      type: object
      properties:
        feedback_ack:
          description: If feedback has been recorded or not
          type: boolean
        rating_ack:
          description: If rating has been recorded or not
          type: boolean

    Scalar:
      description:
        Describes a scalar quantity.<br>This has properties like value,
        estimated_value, computed_value,range, unit
      type: object
      properties:
        type:
          type: string
          enum:
            - CONSTANT
            - VARIABLE
        value:
          type: number
        estimated_value:
          type: number
        computed_value:
          type: number
        range:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        unit:
          type: string
      required:
        - value
        - unit

    Schedule:
      description:
        Describes schedule as a repeating time period used to describe a
        regularly recurring event. At a minimum a schedule will specify
        frequency which describes the interval between occurrences of the event.
        Additional information can be provided to specify the schedule more
        precisely. This includes identifying the timestamps(s) of when the event
        will take place. Schedules may also have holidays to exclude a specific
        day from the schedule.<br>This has properties like frequency, holidays,
        times
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/Duration'
        holidays:
          type: array
          items:
            type: string
            format: date-time
        times:
          type: array
          items:
            type: string
            format: date-time
    State:
      description:
        Describes the state of an order or fulfillment<br>This has properties
        like descriptor, updated_at,updated_by
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          description: ID of entity which changed the state
    Subscriber:
      type: object
      description:
        Any entity which wants to authenticate itself on a network. This can be
        a BAP, BPP, BG, BPPR or a BGR.<br>This has properties like
        subscriber_id,type, cb_url,domain, city, country, sigining_public_key,
        encryption_public_key,status,created, updated expiries
      properties:
        subscriber_id:
          type: string
          description:
            Registered domain name of the subscriber. Must have a valid SSL
            certificate issued by a Certificate Authority of the operating
            region
        type:
          type: string
          enum:
            - bap
            - bpp
            - bg
            - bppr
            - bgr
        cb_url:
          type: string
          description:
            Callback URL of the subscriber. The Registry will call this URL's
            on_subscribe API to validate the subscriber\'s credentials
        domain:
          $ref: '#/components/schemas/Domain'
        city:
          $ref: '#/components/schemas/City/properties/code'
        country:
          $ref: '#/components/schemas/Country/properties/code'
        signing_public_key:
          type: string
          description:
            'Signing Public key of the subscriber. <br/><br/>Any subscriber
            platform (BAP, BPP, BG) who wants to transact on the network must
            digitally sign the ```requestBody``` using the corresponding private
            key of this public key and send it in the transport layer header. In
            case of ```HTTP``` it is the ```Authorization``` header.
            <br><br/>The ```Authorization``` will be used to validate the
            signature of a BAP or BPP.<br/><br/>Furthermore, if an API call is
            being proxied or multicast by a Beckn Gateway, the BG must use
            it\''s signing key to digitally sign the ```requestBody``` using the
            corresponding private key of this public key and send it in the
            ```X-Gateway-Authorization``` header.'
        encryption_public_key:
          type: string
          description:
            Encryption public key of the BAP subscriber. Any BPP must encrypt
            the ```requestBody.message``` value of the ```on_search``` API using
            this public key.
        status:
          type: string
          enum:
            - INITIATED
            - UNDER_SUBSCRIPTION
            - SUBSCRIBED
            - INVALID_SSL
            - UNSUBSCRIBED
        created:
          type: string
          description:
            Timestamp when a subscriber was added to the registry with status =
            INITIATED
          format: date-time
        updated:
          type: string
          format: date-time
        expires:
          type: string
          description:
            Expiry timestamp in UTC derived from the ```lease_time``` of the
            subscriber
          format: date-time

    Support:
      description: Customer support
      type: object
      properties:
        type:
          type: string
          enum:
            - order
            - billing
            - fulfillment
        ref_id:
          type: string
        channels:
          $ref: '#/components/schemas/Tags'

    Tags:
      description:
        Describes a tag. This is a simple key-value store which is used to
        contain extended metadata
      additionalProperties:
        type: string
    Time:
      description:
        Describes time in its various forms. It can be a single point in time;
        duration; or a structured timetable of operations<br>This has properties
        like label, time stamp,duration,range, days, schedule
      type: object
      properties:
        label:
          type: string
        timestamp:
          type: string
          format: date-time
        duration:
          $ref: '#/components/schemas/Duration'
        range:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        days:
          type: string
          description: comma separated values representing days of the week
        schedule:
          $ref: '#/components/schemas/Schedule'

    TrackingData:
      description:
        Describes tracking data information to know the status of an
        object/process or live locations/actions of object and tracking
        activity<br>This has the GPS coordinates properties
      $ref: '#/components/schemas/Location/properties/gps'

    Tracking:
      description:
        Describes as tracking which is useful for knowing the location of time
        sensitive deliveries.<br>This has properties like URL and status of the
        object
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
          enum:
            - active
            - inactive

    Vehicle:
      description:
        Describes a vehicle is a device that is designed or used to transport
        people or cargo over land, water, air, or through space.<br>This has
        properties like category, capacity, make, model,
        size,variant,color,energy_type,registration
      type: object
      properties:
        category:
          type: string
        capacity:
          type: integer
        make:
          type: string
        model:
          type: string
        size:
          type: string
        variant:
          type: string
        color:
          type: string
        energy_type:
          type: string
        registration:
          type: string
